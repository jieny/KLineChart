import{_ as t}from"./chunks/index.DlXcJOFC.js";import{_ as i}from"./chunks/index.Dpk9Vm8G.js";import{c as r,o as n,a4 as l,G as a,j as s,a as o}from"./chunks/framework.BXnzT7e1.js";import"./chunks/theme.Dh7Q_YSA.js";const g=JSON.parse('{"title":"registerStyles(name, styles)","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en-US/api/chart/registerStyles.md","filePath":"en-US/api/chart/registerStyles.md","lastUpdated":1732905115000}'),d={name:"en-US/api/chart/registerStyles.md"},k=Object.assign(d,{setup(h){return(c,e)=>(n(),r("div",null,[e[0]||(e[0]=l(`<h1 id="registerstyles-name-styles" tabindex="-1">registerStyles(name, styles) <a class="header-anchor" href="#registerstyles-name-styles" aria-label="Permalink to &quot;registerStyles(name, styles)&quot;">​</a></h1><p><code>registerStyles</code> used to extend style templates.</p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference {#reference}&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  styles: Styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters {#parameters}&quot;">​</a></h3><ul><li><code>name</code> The name of the style template.</li><li><code>styles</code> Style configuration. See <a href="/en-US/guide/styles">styles</a> for details. Incremental support.</li></ul><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns {#returns}&quot;">​</a></h3><p><code>registerStyles</code> returns <code>undefined</code> .</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage {#usage}&quot;">​</a></h2><h3 id="init-styles" tabindex="-1">Using initialization <a class="header-anchor" href="#init-styles" aria-label="Permalink to &quot;Using initialization {#init-styles}&quot;">​</a></h3>`,10)),a(t),e[1]||(e[1]=s("h3",{id:"setStyles",tabindex:"-1"},[o("Dynamic settings "),s("a",{class:"header-anchor",href:"#setStyles","aria-label":'Permalink to "Dynamic settings {#setStyles}"'},"​")],-1)),a(i)]))}});export{g as __pageData,k as default};
