import{_ as i,a as t}from"./chunks/index.CG2HsY8a.js";import{c as n,o as r,a4 as h,G as s,j as e,a as l}from"./chunks/framework.CfIYv3Gb.js";import"./chunks/theme.BpKKWCCH.js";const g=JSON.parse('{"title":"setThousandsSeparator(thousandsSeparator)","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/instance/setThousandsSeparator.md","filePath":"api/instance/setThousandsSeparator.md","lastUpdated":1732905115000}'),o={name:"api/instance/setThousandsSeparator.md"},E=Object.assign(o,{setup(p){return(d,a)=>(r(),n("div",null,[a[0]||(a[0]=h(`<h1 id="setthousandsseparator-thousandsseparator" tabindex="-1">setThousandsSeparator(thousandsSeparator) <a class="header-anchor" href="#setthousandsseparator-thousandsseparator" aria-label="Permalink to &quot;setThousandsSeparator(thousandsSeparator)&quot;">​</a></h1><p><code>setThousandsSeparator</code> 设置图表千分符配置。</p><h2 id="reference" tabindex="-1">参考 <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;参考 {#reference}&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  thousandsSeparator: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sign?: string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span></code></pre></div><h3 id="parameters" tabindex="-1">参数 <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;参数 {#parameters}&quot;">​</a></h3><ul><li><code>thousandsSeparator</code> 千分符配置。 <ul><li><code>sign</code> 千分符符号。</li><li><code>format</code> 自定义千分符格式化。</li></ul></li></ul><h3 id="returns" tabindex="-1">返回值 <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;返回值 {#returns}&quot;">​</a></h3><p><code>setThousandsSeparator</code> 返回 <code>undefined</code> 。</p><h2 id="usage" tabindex="-1">用法 <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;用法 {#usage}&quot;">​</a></h2><h3 id="sign" tabindex="-1">不显示千分符 <a class="header-anchor" href="#sign" aria-label="Permalink to &quot;不显示千分符 {#sign}&quot;">​</a></h3>`,10)),s(i),a[1]||(a[1]=e("h3",{id:"format",tabindex:"-1"},[l("自定义格式化 "),e("a",{class:"header-anchor",href:"#format","aria-label":'Permalink to "自定义格式化 {#format}"'},"​")],-1)),s(t)]))}});export{g as __pageData,E as default};
