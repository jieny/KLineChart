import{_ as i,a as r}from"./chunks/index.B--k6tu4.js";import{_ as l}from"./chunks/index.CPBsrU99.js";import{c as n,o,a4 as d,G as s,j as a,a as t}from"./chunks/framework.eHlPqORj.js";import"./chunks/theme.BxsqMCiz.js";const b=JSON.parse('{"title":"setStyles(styles)","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en-US/api/instance/setStyles.md","filePath":"en-US/api/instance/setStyles.md","lastUpdated":1732905115000}'),h={name:"en-US/api/instance/setStyles.md"},g=Object.assign(h,{setup(c){return(p,e)=>(o(),n("div",null,[e[0]||(e[0]=d('<h1 id="setstyles-styles" tabindex="-1">setStyles(styles) <a class="header-anchor" href="#setstyles-styles" aria-label="Permalink to &quot;setStyles(styles)&quot;">​</a></h1><p><code>setStyles</code> set the chart style.</p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference {#reference}&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters {#parameters}&quot;">​</a></h3><ul><li><code>styles</code> Style, which can be a style name registered by <code>klinecharts.registerStyles</code>, or <code>Styles</code>. For details about <code>Styles</code>, see <a href="/en-US/guide/styles">Styles</a>. Incremental values ​​are supported.</li></ul><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns {#returns}&quot;">​</a></h3><p><code>setStyles</code> returns <code>undefined</code> .</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage {#usage}&quot;">​</a></h2><h3 id="basic" tabindex="-1">Basic usage <a class="header-anchor" href="#basic" aria-label="Permalink to &quot;Basic usage {#basic}&quot;">​</a></h3>',10)),s(i),e[1]||(e[1]=a("h3",{id:"built-in",tabindex:"-1"},[t("Built-in templates "),a("a",{class:"header-anchor",href:"#built-in","aria-label":'Permalink to "Built-in templates {#built-in}"'},"​")],-1)),s(r),e[2]||(e[2]=a("h3",{id:"extension",tabindex:"-1"},[t("Custom templates "),a("a",{class:"header-anchor",href:"#extension","aria-label":'Permalink to "Custom templates {#extension}"'},"​")],-1)),s(l)]))}});export{b as __pageData,g as default};
