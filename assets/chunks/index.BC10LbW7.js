import{C as t}from"./theme.C1ppDT4A.js";import{b as n,o as e,k as r}from"./framework.BXnzT7e1.js";const a=JSON.parse(`{"js":"import { init, registerFigure, registerIndicator } from 'klinecharts';\\n\\nregisterFigure({\\n  name: 'diamond',\\n  draw: (ctx, attrs, styles) => {\\n    const { x, y, width, height } = attrs;\\n    const { color } = styles;\\n    ctx.beginPath();\\n    ctx.moveTo(x - width / 2, y);\\n    ctx.lineTo(x, y - height / 2);\\n    ctx.lineTo(x + width / 2, y);\\n    ctx.lineTo(x, y + height / 2);\\n    ctx.closePath();\\n    ctx.fillStyle = color;\\n    ctx.fill();\\n  },\\n  checkEventOn: (coordinate, attrs) => {\\n    const { x, y } = coordinate;\\n    const { width, height } = attrs;\\n    return Math.abs(x * height) + Math.abs(y * width) <= width * height / 2;\\n  }\\n});\\n\\nregisterIndicator({\\n  name: 'customIndicatorCustomFigure',\\n  figures: [{\\n    key: 'close',\\n    type: 'diamond',\\n    attrs: ({ coordinate, barSpace }) => {\\n      return {\\n        x: coordinate.current.x,\\n        y: coordinate.current.close,\\n        width: barSpace.gapBar,\\n        height: barSpace.gapBar\\n      }\\n    },\\n    styles: () => ({ color: '#a0a7e6' })\\n  }],\\n  calc: dataList => dataList\\n});\\n\\nconst chart = init('custom-figure-custom-indicator-chart');\\n\\nchart.createIndicator('customIndicatorCustomFigure')\\n\\nfetch('https://klinecharts.com/datas/kline.json')\\n  .then(res => res.json())\\n  .then(dataList => { chart.applyNewData(dataList); });\\n"}`),d={__name:"index",setup(c){return(o,i)=>(e(),n(t,{chartId:"custom-figure-custom-indicator-chart",code:r(a).js},null,8,["code"]))}};export{d as _};
